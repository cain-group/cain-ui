const safeSelector=e=>{const t=[];let o,s=0;e=e.replace(/(\[[^\]]*\])/g,((e,o)=>{const l=`__ph-${s}__`;return t.push(o),s++,l})),o=e.replace(/(:nth-[-\w]+)(\([^)]+\))/g,((e,o,l)=>{const c=`__ph-${s}__`;return t.push(l),s++,o+c}));const l={content:o,placeholders:t};return l},restoreSafeSelector=(e,t)=>t.replace(/__ph-(\d+)__/g,((t,o)=>e[+o])),_polyfillHost="-shadowcsshost",_polyfillSlotted="-shadowcssslotted",_polyfillHostContext="-shadowcsscontext",_parenSuffix=")(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))?([^,{]*)",_cssColonHostRe=new RegExp("("+_polyfillHost+_parenSuffix,"gim"),_cssColonHostContextRe=new RegExp("("+_polyfillHostContext+_parenSuffix,"gim"),_cssColonSlottedRe=new RegExp("("+_polyfillSlotted+_parenSuffix,"gim"),_polyfillHostNoCombinator=_polyfillHost+"-no-combinator",_polyfillHostNoCombinatorRe=/-shadowcsshost-no-combinator([^\s]*)/,_shadowDOMSelectorsRe=[/::shadow/g,/::content/g],_selectorReSuffix="([>\\s~+[.,{:][\\s\\S]*)?$",_polyfillHostRe=/-shadowcsshost/gim,_colonHostRe=/:host/gim,_colonSlottedRe=/::slotted/gim,_colonHostContextRe=/:host-context/gim,_commentRe=/\/\*\s*[\s\S]*?\*\//g,stripComments=e=>e.replace(_commentRe,""),_commentWithHashRe=/\/\*\s*#\s*source(Mapping)?URL=[\s\S]+?\*\//g,extractCommentsWithHash=e=>e.match(_commentWithHashRe)||[],_ruleRe=/(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g,_curlyRe=/([{}])/g,_selectorPartsRe=/(^.*?[^\\])??((:+)(.*)|$)/,OPEN_CURLY="{",CLOSE_CURLY="}",BLOCK_PLACEHOLDER="%BLOCK%",processRules=(e,t)=>{const o=escapeBlocks(e);let s=0;return o.escapedString.replace(_ruleRe,((...e)=>{const l=e[2];let c="",r=e[4],n="";r&&r.startsWith("{"+BLOCK_PLACEHOLDER)&&(c=o.blocks[s++],r=r.substring(BLOCK_PLACEHOLDER.length+1),n="{");const p={selector:l,content:c},i=t(p);return`${e[1]}${i.selector}${e[3]}${n}${i.content}${r}`}))},escapeBlocks=e=>{const t=e.split(_curlyRe),o=[],s=[];let l=0,c=[];for(let n=0;n<t.length;n++){const e=t[n];e===CLOSE_CURLY&&l--,l>0?c.push(e):(c.length>0&&(s.push(c.join("")),o.push(BLOCK_PLACEHOLDER),c=[]),o.push(e)),e===OPEN_CURLY&&l++}c.length>0&&(s.push(c.join("")),o.push(BLOCK_PLACEHOLDER));const r={escapedString:o.join(""),blocks:s};return r},insertPolyfillHostInCssText=e=>(e=e.replace(_colonHostContextRe,_polyfillHostContext).replace(_colonHostRe,_polyfillHost).replace(_colonSlottedRe,_polyfillSlotted),e),convertColonRule=(e,t,o)=>e.replace(t,((...e)=>{if(e[2]){const t=e[2].split(","),s=[];for(let l=0;l<t.length;l++){const c=t[l].trim();if(!c)break;s.push(o(_polyfillHostNoCombinator,c,e[3]))}return s.join(",")}return _polyfillHostNoCombinator+e[3]})),colonHostPartReplacer=(e,t,o)=>e+t.replace(_polyfillHost,"")+o,convertColonHost=e=>convertColonRule(e,_cssColonHostRe,colonHostPartReplacer),colonHostContextPartReplacer=(e,t,o)=>t.indexOf(_polyfillHost)>-1?colonHostPartReplacer(e,t,o):e+t+o+", "+t+" "+e+o,convertColonSlotted=(e,t)=>{const o="."+t+" > ",s=[];return e=e.replace(_cssColonSlottedRe,((...e)=>{if(e[2]){const t=e[2].trim(),l=e[3],c=o+t+l;let r="";for(let o=e[4]-1;o>=0;o--){const t=e[5][o];if("}"===t||","===t)break;r=t+r}const n=r+c,p=`${r.trimRight()}${c.trim()}`;if(n.trim()!==p.trim()){const e=`${p}, ${n}`;s.push({orgSelector:n,updatedSelector:e})}return c}return _polyfillHostNoCombinator+e[3]})),{selectors:s,cssText:e}},convertColonHostContext=e=>convertColonRule(e,_cssColonHostContextRe,colonHostContextPartReplacer),convertShadowDOMSelectors=e=>_shadowDOMSelectorsRe.reduce(((e,t)=>e.replace(t," ")),e),makeScopeMatcher=e=>{const t=/\[/g,o=/\]/g;return e=e.replace(t,"\\[").replace(o,"\\]"),new RegExp("^("+e+")"+_selectorReSuffix,"m")},selectorNeedsScoping=(e,t)=>{const o=makeScopeMatcher(t);return!o.test(e)},injectScopingSelector=(e,t)=>e.replace(_selectorPartsRe,((e,o="",s,l="",c="")=>o+t+l+c)),applySimpleSelectorScope=(e,t,o)=>{if(_polyfillHostRe.lastIndex=0,_polyfillHostRe.test(e)){const t=`.${o}`;return e.replace(_polyfillHostNoCombinatorRe,((e,o)=>injectScopingSelector(o,t))).replace(_polyfillHostRe,t+" ")}return t+" "+e},applyStrictSelectorScope=(e,t,o)=>{const s=/\[is=([^\]]*)\]/g;t=t.replace(s,((e,...t)=>t[0]));const l="."+t,c=e=>{let s=e.trim();if(!s)return"";if(e.indexOf(_polyfillHostNoCombinator)>-1)s=applySimpleSelectorScope(e,t,o);else{const t=e.replace(_polyfillHostRe,"");t.length>0&&(s=injectScopingSelector(t,l))}return s},r=safeSelector(e);e=r.content;let n,p="",i=0;const a=/( |>|\+|~(?!=))\s*/g,_=e.indexOf(_polyfillHostNoCombinator)>-1;let h=!_;while(null!==(n=a.exec(e))){const t=n[1],o=e.slice(i,n.index).trim();h=h||o.indexOf(_polyfillHostNoCombinator)>-1;const s=h?c(o):o;p+=`${s} ${t} `,i=a.lastIndex}const S=e.substring(i);return h=h||S.indexOf(_polyfillHostNoCombinator)>-1,p+=h?c(S):S,restoreSafeSelector(r.placeholders,p)},scopeSelector=(e,t,o,s)=>e.split(",").map((e=>s&&e.indexOf("."+s)>-1?e.trim():selectorNeedsScoping(e,t)?applyStrictSelectorScope(e,t,o).trim():e.trim())).join(", "),scopeSelectors=(e,t,o,s,l)=>processRules(e,(e=>{let l=e.selector,c=e.content;"@"!==e.selector[0]?l=scopeSelector(e.selector,t,o,s):(e.selector.startsWith("@media")||e.selector.startsWith("@supports")||e.selector.startsWith("@page")||e.selector.startsWith("@document"))&&(c=scopeSelectors(e.content,t,o,s));const r={selector:l.replace(/\s{2,}/g," ").trim(),content:c};return r})),scopeCssText=(e,t,o,s,l)=>{e=insertPolyfillHostInCssText(e),e=convertColonHost(e),e=convertColonHostContext(e);const c=convertColonSlotted(e,s);return e=c.cssText,e=convertShadowDOMSelectors(e),t&&(e=scopeSelectors(e,t,o,s)),e=e.replace(/-shadowcsshost-no-combinator/g,`.${o}`),e=e.replace(/>\s*\*\s+([^{, ]+)/gm," $1 "),{cssText:e.trim(),slottedSelectors:c.selectors}},scopeCss=(e,t,o)=>{const s=t+"-h",l=t+"-s",c=extractCommentsWithHash(e);e=stripComments(e);const r=[];if(o){const t=e=>{const t=`/*!@___${r.length}___*/`,o=`/*!@${e.selector}*/`;return r.push({placeholder:t,comment:o}),e.selector=t+e.selector,e};e=processRules(e,(e=>"@"!==e.selector[0]?t(e):e.selector.startsWith("@media")||e.selector.startsWith("@supports")||e.selector.startsWith("@page")||e.selector.startsWith("@document")?(e.content=processRules(e.content,t),e):e))}const n=scopeCssText(e,t,s,l);return e=[n.cssText,...c].join("\n"),o&&r.forEach((({placeholder:t,comment:o})=>{e=e.replace(t,o)})),n.slottedSelectors.forEach((t=>{e=e.replace(t.orgSelector,t.updatedSelector)})),e};export{scopeCss};